name: Validate Environment JSONs

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      first_json_url:
        description: "URL of the reference JSON file (dydxprotocol)"
        required: false
        default: "https://raw.githubusercontent.com/dydxprotocol/v4-web/main/public/configs/v1/env.json"
      second_json_url:
        description: "URL of the JSON file to validate (dydxopsdao)"
        required: false
        default: "https://raw.githubusercontent.com/dydxopsdao/v4-web/faa3fe60bdf0156027849012b41e439146c39c14/public/configs/v1/env.json"

jobs:
  validate-json:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
      DD_SITE: ap1.datadoghq.com
      DD_SERVICE: config-validator

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      # (Other steps like setting default URLs, setting up Python, etc.)

      - name: Install Dependencies
        run: pip install rich requests beautifulsoup4

      - name: Download JSON Files
        run: |
          curl -L "$FIRST_URL" -o dydx_env.json
          curl -L "$SECOND_URL" -o dos_env.json

      - name: Validate JSON Files
        id: run-validation
        run: |
          cd src  
          # The Python script exits with 0 if validation passes, non-zero otherwise
          python env_config_validator.py ../dydx_env.json ../dos_env.json
        continue-on-error: true

      # Option 2: Send a custom event to Datadog
      - name: Send Custom Event to Datadog
        if: always()
        run: |
          if [ "${{ steps.run-validation.outcome }}" = "success" ]; then
            EVENT_TITLE="Env JSON Validation Passed"
            EVENT_TEXT="The environment JSON validation completed successfully."
          else
            EVENT_TITLE="Env JSON Validation Failed"
            EVENT_TEXT="The environment JSON validation encountered issues. Check the logs for details."
          fi
          curl -X POST "https://api.datadoghq.com/api/v1/events?api_key=${DD_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{
                  "title": "'"${EVENT_TITLE}"'",
                  "text": "'"${EVENT_TEXT}"'",
                  "priority": "normal",
                  "tags": ["service:'"$DD_SERVICE"'"]
                }'
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_SITE: ap1.datadoghq.com
          DD_SERVICE: config-validator
